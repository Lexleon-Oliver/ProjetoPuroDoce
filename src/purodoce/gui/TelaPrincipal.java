/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package purodoce.gui;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import purodoce.dao.ClienteDAO;
import purodoce.dao.OrcamentoDAO;
import purodoce.dao.ProdutoDAO;
import purodoce.model.Cliente;
import purodoce.model.Financas;
import purodoce.model.Orcamento;
import purodoce.model.Pedido;
import purodoce.model.Produto;
import purodoce.model.Produtos;

/**
 *
 * @author lex
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private String botaoFuncao;
    private Orcamento orc;
    private Produtos prods;
    
    public TelaPrincipal() {
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) TabelaEstoque.getModel();
        TabelaEstoque.setRowSorter(new TableRowSorter(modelo));
        
        DefaultTableModel modelo01 = (DefaultTableModel) TabelaClientes.getModel();
        TabelaClientes.setRowSorter(new TableRowSorter(modelo01));
        
        DefaultTableModel modelo02 = (DefaultTableModel) TabelaOrcamento.getModel();
        TabelaOrcamento.setRowSorter(new TableRowSorter(modelo02));
        modelo02.setNumRows(0); 
        
        DefaultTableModel modelo03 = (DefaultTableModel) TabelaFinalizarPedido.getModel();
        TabelaFinalizarPedido.setRowSorter(new TableRowSorter(modelo03));
        modelo03.setNumRows(0); 
        
        DefaultTableModel modelo04 = (DefaultTableModel) TabelaPedidos.getModel();
        TabelaPedidos.setRowSorter(new TableRowSorter(modelo04));

        preencherProdutos();
        preencherClientes();
        atualizarTabelaPedidos();
        calcularFinancas();
        
        orc = new Orcamento();
        orc.setListaProd(new ArrayList<Produtos>());

        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        AbaFuncao = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaEstoque = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CampoProduto = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CampoQtdProd = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        CampoPrecoProd = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        CampoIdProd = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        BotaoSalvarProd = new javax.swing.JButton();
        CampoMedidaProd = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelaClientes = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        CampoNomeCliente = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        CampoIdCliente = new javax.swing.JTextField();
        BotaoSalvarCliente = new javax.swing.JButton();
        CampoTelCliente = new javax.swing.JFormattedTextField();
        jLabel30 = new javax.swing.JLabel();
        CampoRuaCliente = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        CampoBairroCliente = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        CampoCidadeCliente = new javax.swing.JTextField();
        CampoNumCliente = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        CampoClienteOrcamento = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        CampoProdOrcamento = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        BotaoAddProd = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabelaOrcamento = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        CampoPrecoProdOrcamento = new javax.swing.JFormattedTextField();
        jLabel41 = new javax.swing.JLabel();
        CampoMaoObraOrcamento = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        CampoTotalOrcamento = new javax.swing.JFormattedTextField();
        BotaoConfirmarOrcamento = new javax.swing.JButton();
        BotaoCancelarOrcamento = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        CampoDesconto = new javax.swing.JFormattedTextField();
        BotaoDesconto = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        CampoRedondo = new javax.swing.JRadioButton();
        CampoQuadrado = new javax.swing.JRadioButton();
        CampoRetangulo = new javax.swing.JRadioButton();
        jLabel31 = new javax.swing.JLabel();
        CampoDimensaoOrcamento = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        CampoIdClienteOrcamento = new javax.swing.JFormattedTextField();
        jLabel50 = new javax.swing.JLabel();
        CampoIdProdOrcamento = new javax.swing.JFormattedTextField();
        CampoQtdProdOrcamento = new javax.swing.JTextField();
        CampoDataOrcamento = new javax.swing.JFormattedTextField();
        CampoQtdPessoasOrcamento = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        CampoReceitaPedidos = new javax.swing.JFormattedTextField();
        jLabel46 = new javax.swing.JLabel();
        CampoDespesaPedidos = new javax.swing.JFormattedTextField();
        jLabel45 = new javax.swing.JLabel();
        CampoTotalPedidos = new javax.swing.JFormattedTextField();
        jLabel47 = new javax.swing.JLabel();
        CampoReceberPedidos = new javax.swing.JFormattedTextField();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TabelaFinalizarPedido = new javax.swing.JTable();
        BotaoPedir = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TabelaPedidos = new javax.swing.JTable();
        BotaoPesquisaPedidos = new javax.swing.JButton();
        CampoDataInicio = new javax.swing.JFormattedTextField();
        CampoDataFim = new javax.swing.JFormattedTextField();
        jPanel21 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        CampoIdPedidoReceber = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        PedidoReceberSim = new javax.swing.JRadioButton();
        jPanel22 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        BotaoCadastrar = new javax.swing.JButton();
        BotaoEditar = new javax.swing.JButton();
        BotaoRemover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(107, 33, 181));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/purodoce/images/Ã­ndice3 edit.jpeg"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(107, 33, 181));

        jLabel2.setFont(new java.awt.Font("Nimbus Sans L", 1, 24)); // NOI18N
        jLabel2.setText("Gerenciamento de Bolos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        AbaFuncao.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        AbaFuncao.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AbaFuncaoStateChanged(evt);
            }
        });
        AbaFuncao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AbaFuncaoMouseClicked(evt);
            }
        });

        TabelaEstoque.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        TabelaEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Produto", "Quantidade", "Unidade Medida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaEstoque.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        TabelaEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaEstoqueMouseClicked(evt);
            }
        });
        TabelaEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TabelaEstoqueKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaEstoque);
        if (TabelaEstoque.getColumnModel().getColumnCount() > 0) {
            TabelaEstoque.getColumnModel().getColumn(0).setResizable(false);
            TabelaEstoque.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel8.setBackground(new java.awt.Color(107, 33, 181));

        jLabel3.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        jLabel3.setText("PRODUTO");

        jLabel4.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel4.setText("Produto ");

        CampoProduto.setEditable(false);
        CampoProduto.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoProduto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoProduto.setEnabled(false);
        CampoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoProdutoActionPerformed(evt);
            }
        });
        CampoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CampoProdutoKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel5.setText("Quantidade");

        CampoQtdProd.setEditable(false);
        CampoQtdProd.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoQtdProd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoQtdProd.setEnabled(false);
        CampoQtdProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoQtdProdActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel6.setText("PreÃ§o UnitÃ¡rio");

        CampoPrecoProd.setEditable(false);
        CampoPrecoProd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        CampoPrecoProd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoPrecoProd.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel7.setText("ID");

        CampoIdProd.setEditable(false);
        CampoIdProd.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoIdProd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoIdProd.setEnabled(false);
        CampoIdProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoIdProdActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel8.setText("Medida");

        BotaoSalvarProd.setBackground(new java.awt.Color(107, 33, 181));
        BotaoSalvarProd.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        BotaoSalvarProd.setForeground(new java.awt.Color(255, 255, 255));
        BotaoSalvarProd.setText("CONFIRMAR");
        BotaoSalvarProd.setEnabled(false);
        BotaoSalvarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSalvarProdActionPerformed(evt);
            }
        });

        CampoMedidaProd.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoMedidaProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "kg", "unidade", "litro", "pente 30 unidades", "dÃºzia", "caixa com 12 litros", "lata 800g", "caixa 200g", "pacote 5kg" }));
        CampoMedidaProd.setSelectedIndex(-1);
        CampoMedidaProd.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoIdProd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoQtdProd, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoMedidaProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoPrecoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotaoSalvarProd)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CampoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(CampoQtdProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(CampoPrecoProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(CampoIdProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(CampoMedidaProd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotaoSalvarProd)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AbaFuncao.addTab("Estoque", jPanel5);

        TabelaClientes.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        TabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nome", "Telefone"
            }
        ));
        TabelaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaClientesMouseClicked(evt);
            }
        });
        TabelaClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TabelaClientesKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(TabelaClientes);

        jPanel15.setBackground(new java.awt.Color(107, 33, 181));

        jLabel21.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        jLabel21.setText("CLIENTE");

        jLabel22.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel22.setText("Nome");

        CampoNomeCliente.setEditable(false);
        CampoNomeCliente.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoNomeCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoNomeCliente.setEnabled(false);
        CampoNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoNomeClienteActionPerformed(evt);
            }
        });
        CampoNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CampoNomeClienteKeyReleased(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel23.setText("Telefone");

        jLabel25.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel25.setText("ID");

        CampoIdCliente.setEditable(false);
        CampoIdCliente.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoIdCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoIdCliente.setEnabled(false);
        CampoIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoIdClienteActionPerformed(evt);
            }
        });

        BotaoSalvarCliente.setBackground(new java.awt.Color(107, 33, 181));
        BotaoSalvarCliente.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        BotaoSalvarCliente.setForeground(new java.awt.Color(255, 255, 255));
        BotaoSalvarCliente.setText("CONFIRMAR");
        BotaoSalvarCliente.setEnabled(false);
        BotaoSalvarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSalvarClienteActionPerformed(evt);
            }
        });

        CampoTelCliente.setEditable(false);
        try {
            CampoTelCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        CampoTelCliente.setEnabled(false);
        CampoTelCliente.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel30.setText("Rua");

        CampoRuaCliente.setEditable(false);
        CampoRuaCliente.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoRuaCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoRuaCliente.setEnabled(false);
        CampoRuaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoRuaClienteActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel37.setText("NÃºmero");

        jLabel38.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel38.setText("Bairro");

        CampoBairroCliente.setEditable(false);
        CampoBairroCliente.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoBairroCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoBairroCliente.setEnabled(false);
        CampoBairroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoBairroClienteActionPerformed(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel39.setText("Cidade");

        CampoCidadeCliente.setEditable(false);
        CampoCidadeCliente.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoCidadeCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoCidadeCliente.setEnabled(false);
        CampoCidadeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoCidadeClienteActionPerformed(evt);
            }
        });

        CampoNumCliente.setEditable(false);
        CampoNumCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        CampoNumCliente.setEnabled(false);
        CampoNumCliente.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotaoSalvarCliente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel21)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoTelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoRuaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoNumCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoBairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(CampoNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel25)
                    .addComponent(CampoIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoTelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel39)
                        .addComponent(CampoCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel30)
                        .addComponent(CampoRuaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel37)
                        .addComponent(jLabel38)
                        .addComponent(CampoBairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CampoNumCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(BotaoSalvarCliente)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AbaFuncao.addTab("Cientes", jPanel10);

        jLabel24.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel24.setText("Nome do Cliente");

        CampoClienteOrcamento.setEditable(false);
        CampoClienteOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoClienteOrcamento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoClienteOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoClienteOrcamentoActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel26.setText("Produto ");

        CampoProdOrcamento.setEditable(false);
        CampoProdOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoProdOrcamento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoProdOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoProdOrcamentoActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel27.setText("Quantidade");

        BotaoAddProd.setBackground(new java.awt.Color(107, 33, 181));
        BotaoAddProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/purodoce/images/oie_19223845vRiIjKyD(2).png"))); // NOI18N
        BotaoAddProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoAddProdActionPerformed(evt);
            }
        });

        TabelaOrcamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Produto", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TabelaOrcamento);

        jPanel17.setBackground(new java.awt.Color(107, 33, 181));

        jLabel40.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel40.setText("PreÃ§o Produtos");

        CampoPrecoProdOrcamento.setEditable(false);
        CampoPrecoProdOrcamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        CampoPrecoProdOrcamento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoPrecoProdOrcamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CampoPrecoProdOrcamentoFocusGained(evt);
            }
        });

        jLabel41.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel41.setText("MÃ£o de Obra");

        CampoMaoObraOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoMaoObraOrcamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10%", "20%", "30%", "40%", "50%", "60%", "70%", "80%", "90%", "100%" }));
        CampoMaoObraOrcamento.setSelectedIndex(-1);
        CampoMaoObraOrcamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CampoMaoObraOrcamentoItemStateChanged(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel42.setText("Total");

        CampoTotalOrcamento.setEditable(false);
        CampoTotalOrcamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        CampoTotalOrcamento.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        BotaoConfirmarOrcamento.setBackground(new java.awt.Color(107, 33, 181));
        BotaoConfirmarOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        BotaoConfirmarOrcamento.setForeground(new java.awt.Color(255, 255, 255));
        BotaoConfirmarOrcamento.setText("CONFIRMAR PEDIDO");
        BotaoConfirmarOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoConfirmarOrcamentoActionPerformed(evt);
            }
        });

        BotaoCancelarOrcamento.setBackground(new java.awt.Color(107, 33, 181));
        BotaoCancelarOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        BotaoCancelarOrcamento.setForeground(new java.awt.Color(255, 255, 255));
        BotaoCancelarOrcamento.setText("CANCELAR PEDIDO");
        BotaoCancelarOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCancelarOrcamentoActionPerformed(evt);
            }
        });

        jLabel51.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel51.setText("Desconto");

        CampoDesconto.setEditable(false);
        CampoDesconto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        CampoDesconto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CampoDescontoKeyReleased(evt);
            }
        });

        BotaoDesconto.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        BotaoDesconto.setText("DAR DESCONTO");
        BotaoDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoDescontoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoPrecoProdOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoMaoObraOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel51)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BotaoDesconto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CampoTotalOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BotaoCancelarOrcamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotaoConfirmarOrcamento)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel51)
                        .addComponent(CampoDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel40)
                        .addComponent(CampoPrecoProdOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel41)
                        .addComponent(CampoMaoObraOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel42)
                        .addComponent(CampoTotalOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BotaoDesconto)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoConfirmarOrcamento)
                    .addComponent(BotaoCancelarOrcamento))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel28.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel28.setText("Data da Entrega");

        jLabel29.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel29.setText("NÂº Pessoas");

        jLabel43.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel43.setText("Forma: ");

        buttonGroup1.add(CampoRedondo);
        CampoRedondo.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoRedondo.setText("Redondo");
        CampoRedondo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CampoRedondoItemStateChanged(evt);
            }
        });
        CampoRedondo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoRedondoActionPerformed(evt);
            }
        });

        buttonGroup1.add(CampoQuadrado);
        CampoQuadrado.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoQuadrado.setText("Quadrado");
        CampoQuadrado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CampoQuadradoItemStateChanged(evt);
            }
        });
        CampoQuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoQuadradoActionPerformed(evt);
            }
        });

        buttonGroup1.add(CampoRetangulo);
        CampoRetangulo.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoRetangulo.setText("Retangulo");
        CampoRetangulo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CampoRetanguloItemStateChanged(evt);
            }
        });
        CampoRetangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoRetanguloActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel31.setText("DimensÃµes");

        CampoDimensaoOrcamento.setEditable(false);
        CampoDimensaoOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoDimensaoOrcamento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoDimensaoOrcamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CampoDimensaoOrcamentoFocusGained(evt);
            }
        });
        CampoDimensaoOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoDimensaoOrcamentoActionPerformed(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel49.setText("ID do Cliente ");

        CampoIdClienteOrcamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        CampoIdClienteOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoIdClienteOrcamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CampoIdClienteOrcamentoKeyReleased(evt);
            }
        });

        jLabel50.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel50.setText("ID do Produto ");

        CampoIdProdOrcamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        CampoIdProdOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoIdProdOrcamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CampoIdProdOrcamentoKeyReleased(evt);
            }
        });

        CampoQtdProdOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoQtdProdOrcamento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoQtdProdOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoQtdProdOrcamentoActionPerformed(evt);
            }
        });

        try {
            CampoDataOrcamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        CampoDataOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoDataOrcamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CampoDataOrcamentoFocusLost(evt);
            }
        });
        CampoDataOrcamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CampoDataOrcamentoKeyReleased(evt);
            }
        });

        CampoQtdPessoasOrcamento.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoQtdPessoasOrcamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "12", "18", "25", "30", "36", "40", "50", "60", "70", "80", "90", "100", "110", "130", "150", "180" }));
        CampoQtdPessoasOrcamento.setSelectedIndex(-1);
        CampoQtdPessoasOrcamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CampoQtdPessoasOrcamentoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoIdClienteOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoQtdPessoasOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel50)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoIdProdOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoClienteOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoRedondo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoQuadrado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoRetangulo))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoProdOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoQtdProdOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(BotaoAddProd))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoDimensaoOrcamento, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CampoDataOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(CampoClienteOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49)
                            .addComponent(CampoIdClienteOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel43)
                            .addComponent(CampoRedondo)
                            .addComponent(CampoQuadrado)
                            .addComponent(CampoRetangulo)
                            .addComponent(CampoQtdPessoasOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(CampoDataOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(CampoDimensaoOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(CampoIdProdOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(CampoProdOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(BotaoAddProd)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CampoQtdProdOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {BotaoAddProd, CampoClienteOrcamento, CampoDataOrcamento, CampoDimensaoOrcamento, CampoIdClienteOrcamento, CampoIdProdOrcamento, CampoProdOrcamento, CampoQtdPessoasOrcamento, CampoQtdProdOrcamento, jLabel26, jLabel27, jLabel50});

        AbaFuncao.addTab("OrÃ§amento", jPanel6);

        jPanel18.setBackground(new java.awt.Color(107, 33, 181));

        jLabel44.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel44.setText("Receita");

        CampoReceitaPedidos.setEditable(false);
        CampoReceitaPedidos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        CampoReceitaPedidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel46.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel46.setText("Despesa");

        CampoDespesaPedidos.setEditable(false);
        CampoDespesaPedidos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        CampoDespesaPedidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel45.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel45.setText("Total");

        CampoTotalPedidos.setEditable(false);
        CampoTotalPedidos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        CampoTotalPedidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel47.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel47.setText("A Receber");

        CampoReceberPedidos.setEditable(false);
        CampoReceberPedidos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        CampoReceberPedidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CampoReceitaPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 60, Short.MAX_VALUE)
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CampoDespesaPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 60, Short.MAX_VALUE)
                .addComponent(jLabel47)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CampoReceberPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 60, Short.MAX_VALUE)
                .addComponent(jLabel45)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CampoTotalPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel45)
                        .addComponent(CampoTotalPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel47)
                        .addComponent(CampoReceberPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel44)
                        .addComponent(CampoReceitaPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel46)
                        .addComponent(CampoDespesaPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        TabelaFinalizarPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Cliente", "Forma", "DimensÃµes", "Data compra", "Data entrega", "Valor", "Pago"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaFinalizarPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TabelaFinalizarPedidoKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(TabelaFinalizarPedido);

        BotaoPedir.setBackground(new java.awt.Color(107, 33, 181));
        BotaoPedir.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        BotaoPedir.setForeground(new java.awt.Color(255, 255, 255));
        BotaoPedir.setText("FINALIZAR PEDIDO");
        BotaoPedir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoPedirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotaoPedir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BotaoPedir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new java.awt.Color(107, 33, 181));

        jLabel32.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        jLabel32.setText("HISTÃRICO PEDIDOS");

        jLabel33.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel33.setText("Data inÃ­cio");

        jLabel34.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel34.setText("Data fim");

        TabelaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Cliente", "Forma", "DimensÃµes", "Data compra", "Data entrega", "Valor", "Pago"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaPedidosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TabelaPedidosMousePressed(evt);
            }
        });
        TabelaPedidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TabelaPedidosKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(TabelaPedidos);

        BotaoPesquisaPedidos.setBackground(new java.awt.Color(107, 33, 181));
        BotaoPesquisaPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/purodoce/images/oie_2044638AGghVJD1.png"))); // NOI18N
        BotaoPesquisaPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoPesquisaPedidosActionPerformed(evt);
            }
        });

        try {
            CampoDataInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        CampoDataInicio.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N

        try {
            CampoDataFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        CampoDataFim.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CampoDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CampoDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BotaoPesquisaPedidos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel32)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CampoDataFim, CampoDataInicio});

        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotaoPesquisaPedidos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel33)
                        .addComponent(jLabel34)
                        .addComponent(CampoDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CampoDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CampoDataFim, CampoDataInicio});

        jLabel36.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel36.setText("ID");

        CampoIdPedidoReceber.setEditable(false);
        CampoIdPedidoReceber.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        CampoIdPedidoReceber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CampoIdPedidoReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoIdPedidoReceberActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel48.setText("Receber");

        buttonGroup2.add(PedidoReceberSim);
        PedidoReceberSim.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        PedidoReceberSim.setText("Sim");
        PedidoReceberSim.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                PedidoReceberSimItemStateChanged(evt);
            }
        });
        PedidoReceberSim.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PedidoReceberSimStateChanged(evt);
            }
        });
        PedidoReceberSim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PedidoReceberSimMouseClicked(evt);
            }
        });
        PedidoReceberSim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PedidoReceberSimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CampoIdPedidoReceber, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel48)
                .addGap(18, 18, 18)
                .addComponent(PedidoReceberSim)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(CampoIdPedidoReceber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48)
                    .addComponent(PedidoReceberSim))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        AbaFuncao.addTab("Pedidos", jPanel11);

        jPanel26.setBackground(new java.awt.Color(107, 33, 181));

        jPanel24.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 0, 0), java.awt.Color.black));

        jLabel9.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel9.setText("VersÃ£o 1.0");

        jLabel10.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        jLabel10.setText("INFORMAÃÃES");

        jLabel11.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel11.setText("Registrado para ");

        jLabel12.setFont(new java.awt.Font("Nimbus Sans L", 1, 14)); // NOI18N
        jLabel12.setText("PURO DOCE");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/purodoce/images/copyright.png"))); // NOI18N

        jLabel14.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel14.setText("Desenvolvido por");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/purodoce/images/LexDev1.png"))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel16.setText("lexleonmg@gmail.com");

        jLabel17.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel17.setText("https://www.linkedin.com/in/lexoliveira/");

        jLabel18.setFont(new java.awt.Font("Nimbus Sans L", 0, 14)); // NOI18N
        jLabel18.setText("(32) 99131-5140");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel13))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        AbaFuncao.addTab("Sobre", jPanel22);

        BotaoCadastrar.setBackground(new java.awt.Color(107, 33, 181));
        BotaoCadastrar.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        BotaoCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        BotaoCadastrar.setText("CADASTRAR");
        BotaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoCadastrarActionPerformed(evt);
            }
        });

        BotaoEditar.setBackground(new java.awt.Color(107, 33, 181));
        BotaoEditar.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        BotaoEditar.setForeground(new java.awt.Color(255, 255, 255));
        BotaoEditar.setText("INCREMENTAR");
        BotaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoEditarActionPerformed(evt);
            }
        });

        BotaoRemover.setBackground(new java.awt.Color(107, 33, 181));
        BotaoRemover.setFont(new java.awt.Font("Nimbus Sans L", 1, 18)); // NOI18N
        BotaoRemover.setForeground(new java.awt.Color(255, 255, 255));
        BotaoRemover.setText("REMOVER");
        BotaoRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotaoRemover)
                    .addComponent(BotaoEditar)
                    .addComponent(BotaoCadastrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {BotaoCadastrar, BotaoEditar, BotaoRemover});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotaoCadastrar)
                .addGap(18, 18, 18)
                .addComponent(BotaoRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BotaoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {BotaoCadastrar, BotaoEditar, BotaoRemover});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AbaFuncao))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AbaFuncao))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CampoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoProdutoActionPerformed

    private void CampoQtdProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoQtdProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoQtdProdActionPerformed

    private void CampoIdProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoIdProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoIdProdActionPerformed

    private void CampoNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoNomeClienteActionPerformed

    private void CampoIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoIdClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoIdClienteActionPerformed

    private void CampoClienteOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoClienteOrcamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoClienteOrcamentoActionPerformed

    private void CampoProdOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoProdOrcamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoProdOrcamentoActionPerformed

    private void CampoRuaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoRuaClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoRuaClienteActionPerformed

    private void CampoBairroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoBairroClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoBairroClienteActionPerformed

    private void CampoCidadeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoCidadeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoCidadeClienteActionPerformed

    private void BotaoSalvarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSalvarProdActionPerformed
        switch (botaoFuncao) {
            case "cadastrar":
                if (validarProduto()){
                    salvarProduto();
                    preencherProdutos();
                }else{
                    JOptionPane.showMessageDialog(null, "Corrija os problemas relatados e tente novamente","AtenÃ§Ã£o",JOptionPane.INFORMATION_MESSAGE);
                }

            break;
            case "remover":
                if(CampoIdProd.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "Selecione um produto para remover","Produto NÃ£o Selecionado",JOptionPane.ERROR_MESSAGE);
                }else{
                    removerProduto(Long.parseLong(CampoIdProd.getText()));
                    preencherProdutos();
                }
            break;
            default:
                if(CampoIdProd.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "Selecione um produto para incrementar","Produto NÃ£o Selecionado",JOptionPane.ERROR_MESSAGE);
                }else{
                    if (validarProduto()){
                        editarProduto();
                        preencherProdutos();
                    }else{
                        JOptionPane.showMessageDialog(null, "Corrija os problemas relatados e tente novamente","AtenÃ§Ã£o",JOptionPane.INFORMATION_MESSAGE);
                    }
                }        
        }
        limparProduto();
        habilitarProduto(false);

    }//GEN-LAST:event_BotaoSalvarProdActionPerformed

    private void BotaoConfirmarOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoConfirmarOrcamentoActionPerformed
        if(validarOrcamento()){
            OrcamentoDAO orcdao = new OrcamentoDAO();
            preencherTabelaFinalizarPedido(orc);
            removerEstoque(orc);
            preencherProdutos();
            AbaFuncao.setSelectedIndex(3);
        }else{
            JOptionPane.showMessageDialog(null, "Corrija os problemas relatados e tente novamente","AtenÃ§Ã£o",JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_BotaoConfirmarOrcamentoActionPerformed

    private void CampoRedondoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoRedondoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoRedondoActionPerformed

    private void CampoQuadradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoQuadradoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoQuadradoActionPerformed

    private void CampoRetanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoRetanguloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoRetanguloActionPerformed

    private void CampoDimensaoOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoDimensaoOrcamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoDimensaoOrcamentoActionPerformed

    private void BotaoPedirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoPedirActionPerformed
        if (TabelaFinalizarPedido.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "NÃ£o hÃ¡ nenhum pedido para ser finalizado","AtenÃ§Ã£o",JOptionPane.INFORMATION_MESSAGE);
        }else{
            salvarPedido();
            limparTabelaFinalizarPedido();
            atualizarTabelaPedidos();
            calcularFinancas();
        }
                
        
    }//GEN-LAST:event_BotaoPedirActionPerformed

    private void BotaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCadastrarActionPerformed
        botaoFuncao = "cadastrar";
        limparProduto();
        limparCliente();
        if(AbaFuncao.getSelectedIndex()==0){
            habilitarProduto(true);
        }else if(AbaFuncao.getSelectedIndex()==1){
            habilitarCliente(true);
        }
    }//GEN-LAST:event_BotaoCadastrarActionPerformed

    private void BotaoRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoRemoverActionPerformed
        botaoFuncao = "remover";
        if(AbaFuncao.getSelectedIndex()==0){
            BotaoSalvarProd.setEnabled(true);
        }else if(AbaFuncao.getSelectedIndex()==1){
            preencherClientes();
            BotaoSalvarCliente.setEnabled(true);
        }
    }//GEN-LAST:event_BotaoRemoverActionPerformed

    private void BotaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoEditarActionPerformed
        botaoFuncao = "editar";
        if(AbaFuncao.getSelectedIndex()==0){
            preencherProdutos();
            habilitarProduto(true);
        }else if(AbaFuncao.getSelectedIndex()==1){
            habilitarCliente(true);
        }
    }//GEN-LAST:event_BotaoEditarActionPerformed

    private void BotaoSalvarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSalvarClienteActionPerformed
         switch (botaoFuncao) {
            case "cadastrar":
                if (validarCliente()){
                    salvarCliente();
                    preencherClientes();
                }else{
                    JOptionPane.showMessageDialog(null, "Corrija os problemas relatados e tente novamente","AtenÃ§Ã£o",JOptionPane.INFORMATION_MESSAGE);
                }

            break;
            case "remover":
                if(CampoIdCliente.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "Selecione um cliente para remover","Cliente NÃ£o Selecionado",JOptionPane.ERROR_MESSAGE);
                }else{
                    removerCliente(Long.parseLong(CampoIdCliente.getText()));
                    preencherClientes();
                }
            break;
            default:
                if(CampoIdCliente.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "Selecione um cliente para incrementar","Cliente NÃ£o Selecionado",JOptionPane.ERROR_MESSAGE);
                }else{
                    if (validarCliente()){
                        editarCliente();
                        preencherClientes();
                    }else{
                        JOptionPane.showMessageDialog(null, "Corrija os problemas relatados e tente novamente","AtenÃ§Ã£o",JOptionPane.INFORMATION_MESSAGE);
                    }
                }        
        }
        limparCliente();
        habilitarCliente(false);
    }//GEN-LAST:event_BotaoSalvarClienteActionPerformed

    private void AbaFuncaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AbaFuncaoMouseClicked
        switch (AbaFuncao.getSelectedIndex()) {
            case 0:
                case 1:
                    habilitarBotoesFuncao(true);
                break;
            default:
                habilitarBotoesFuncao(false);
        }
           
    }//GEN-LAST:event_AbaFuncaoMouseClicked

    private void AbaFuncaoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AbaFuncaoStateChanged
        switch (AbaFuncao.getSelectedIndex()) {
            case 0:
                case 1:
                    habilitarBotoesFuncao(true);
                break;
            default:
                habilitarBotoesFuncao(false);
        }
    }//GEN-LAST:event_AbaFuncaoStateChanged

    private void BotaoAddProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoAddProdActionPerformed
        if (validarQtdProdOrcamento()){
            prods.setQuantidade(Float.parseFloat(CampoQtdProdOrcamento.getText().replace(",", ".")));
        }
        if(orc.getListaProd().contains(prods)){
           int index= orc.getListaProd().indexOf(prods);
           float novaQtd = prods.getQuantidade()+orc.getListaProd().get(index).getQuantidade();
           orc.getListaProd().get(index).setQuantidade(novaQtd);
           orc.setPrecoProdutos(orc.getListaProd());
           for(int i=0; i<=TabelaOrcamento.getRowCount();i++){
                if(prods.getNome().equals(TabelaOrcamento.getValueAt(i, 0))){
                            removerprodutoTabelaOrcamento(i);
                            adicionarProdutoTabelaOrcamento(orc.getListaProd().get(index));
                            break;
                        }    
                    }       
        }else{
           orc.getListaProd().add(prods);
           orc.setPrecoProdutos(orc.getListaProd());
           adicionarProdutoTabelaOrcamento(prods);
        }
        CampoIdProdOrcamento.setText("");
        CampoProdOrcamento.setText("");
        CampoQtdProdOrcamento.setText("");
        CampoPrecoProdOrcamento.setText(String.valueOf(orc.getPrecoProdutos()));
                  
    }//GEN-LAST:event_BotaoAddProdActionPerformed

    private void CampoDimensaoOrcamentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoDimensaoOrcamentoFocusGained

    }//GEN-LAST:event_CampoDimensaoOrcamentoFocusGained

    private void CampoPrecoProdOrcamentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoPrecoProdOrcamentoFocusGained
        
    }//GEN-LAST:event_CampoPrecoProdOrcamentoFocusGained

    private void CampoMaoObraOrcamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CampoMaoObraOrcamentoItemStateChanged
        calcularTotalOrcamento(orc.getPrecoProdutos());
        CampoDesconto.setEditable(true);
    }//GEN-LAST:event_CampoMaoObraOrcamentoItemStateChanged

    private void BotaoPesquisaPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoPesquisaPedidosActionPerformed
        if(validarData(CampoDataInicio.getText())){
            if(validarData(CampoDataFim.getText())){
                String dataInicio = CampoDataInicio.getText().replace("/", "-");
                LocalDate inicio = LocalDate.parse(dataInicio,DateTimeFormatter.ofPattern("dd-MM-yyyy"));
                String dataFim = CampoDataFim.getText().replace("/", "-");
                LocalDate fim = LocalDate.parse(dataFim,DateTimeFormatter.ofPattern("dd-MM-yyyy"));
                if(inicio.isAfter(fim)){
                    JOptionPane.showMessageDialog(null, "Verifique a data digitada, data fim nÃ£o pode ser uma data anterior a data inicio!", "Data Incorreta", JOptionPane.ERROR_MESSAGE); 
                }else{
                    atualizarTabelaPedidos(pesquisarPedidos(inicio, fim));
                    calcularFinancas(inicio,fim);
                }
            }else{
              CampoDataInicio.setText("");
              CampoDataFim.setText("");
            }
        }else{
            CampoDataInicio.setText("");
            CampoDataFim.setText("");
        }     
    }//GEN-LAST:event_BotaoPesquisaPedidosActionPerformed

    private void CampoIdPedidoReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoIdPedidoReceberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoIdPedidoReceberActionPerformed

    private void PedidoReceberSimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PedidoReceberSimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PedidoReceberSimActionPerformed

    private void PedidoReceberSimStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PedidoReceberSimStateChanged
        
    }//GEN-LAST:event_PedidoReceberSimStateChanged

    private void PedidoReceberSimItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_PedidoReceberSimItemStateChanged
        if (PedidoReceberSim.isSelected()){
            if(CampoIdPedidoReceber.getText().equals("")){
                JOptionPane.showMessageDialog(null, "NÃ£o hÃ¡ nenhum pedido selecionado para receber. Por favor, selecione um.","AtenÃ§Ã£o",JOptionPane.INFORMATION_MESSAGE);
            }else{
                atualizarPedido();
                atualizarTabelaPedidos(pesquisarPedidos());
                calcularFinancas();
            } 
            CampoIdPedidoReceber.setText("");
            buttonGroup2.clearSelection();
        } 
        
        //        
    }//GEN-LAST:event_PedidoReceberSimItemStateChanged

    private void CampoProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoProdutoKeyReleased
        if (botaoFuncao.equals("cadastrar"))
        preencherProdutos(CampoProduto.getText());
        
    }//GEN-LAST:event_CampoProdutoKeyReleased

    private void TabelaEstoqueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabelaEstoqueKeyPressed
        selecionarProduto(Long.parseLong(TabelaEstoque.getValueAt(TabelaEstoque.getSelectedRow(), 0).toString()));
        
    }//GEN-LAST:event_TabelaEstoqueKeyPressed

    private void TabelaEstoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaEstoqueMouseClicked
        selecionarProduto(Long.parseLong(TabelaEstoque.getValueAt(TabelaEstoque.getSelectedRow(), 0).toString()));
    }//GEN-LAST:event_TabelaEstoqueMouseClicked

    private void TabelaClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabelaClientesKeyPressed
        selecionarCliente(Long.parseLong(TabelaClientes.getValueAt(TabelaClientes.getSelectedRow(), 0).toString()));
    }//GEN-LAST:event_TabelaClientesKeyPressed

    private void TabelaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaClientesMouseClicked
        selecionarCliente(Long.parseLong(TabelaClientes.getValueAt(TabelaClientes.getSelectedRow(), 0).toString()));
    }//GEN-LAST:event_TabelaClientesMouseClicked

    private void CampoNomeClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoNomeClienteKeyReleased
        if (botaoFuncao.equals("cadastrar"))
        preencherClientes(CampoNomeCliente.getText());
    }//GEN-LAST:event_CampoNomeClienteKeyReleased

    private void CampoIdClienteOrcamentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoIdClienteOrcamentoKeyReleased
        if(!"".equals(CampoIdClienteOrcamento.getText())){
            if(validarIdClienteOrc()) {
                ClienteDAO cdao = new ClienteDAO();
                Cliente cliente = new Cliente();
                cliente = cdao.listarPorId(Long.parseLong(CampoIdClienteOrcamento.getText()));
                orc.setCliente(cliente);
                CampoClienteOrcamento.setText(orc.getCliente().getNome());
            } 
        }else{
            CampoProdOrcamento.setText("");
        }
    }//GEN-LAST:event_CampoIdClienteOrcamentoKeyReleased

    private void CampoIdProdOrcamentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoIdProdOrcamentoKeyReleased
        if(!"".equals(CampoIdProdOrcamento.getText())){
           if(validarIdProdOrc()) {
                ProdutoDAO proddao = new ProdutoDAO();
                Produto prod = new Produto();
                prod = proddao.listarPorId(Long.parseLong(CampoIdProdOrcamento.getText()));
                prods = new Produtos(prod);
                CampoProdOrcamento.setText(prods.getNome()); 
           } 
        }else{
            CampoProdOrcamento.setText("");
        }
    }//GEN-LAST:event_CampoIdProdOrcamentoKeyReleased

    private void CampoQtdProdOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoQtdProdOrcamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoQtdProdOrcamentoActionPerformed

    private void BotaoCancelarOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoCancelarOrcamentoActionPerformed
        limparOrcamento();
    }//GEN-LAST:event_BotaoCancelarOrcamentoActionPerformed

    private void CampoDataOrcamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CampoDataOrcamentoFocusLost
        if(validarData(CampoDataOrcamento.getText()) && validarDataFutura(CampoDataOrcamento.getText())){
            String data = CampoDataOrcamento.getText().replace("/", "-");
            orc.setDataEntrega(LocalDate.parse(data, DateTimeFormatter.ofPattern("dd-MM-yyyy")));
         }else{
            CampoDataOrcamento.setText("");
            
        }  
    }//GEN-LAST:event_CampoDataOrcamentoFocusLost

    private void CampoDataOrcamentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoDataOrcamentoKeyReleased

    }//GEN-LAST:event_CampoDataOrcamentoKeyReleased

    private void CampoQtdPessoasOrcamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CampoQtdPessoasOrcamentoItemStateChanged
        if (CampoQtdPessoasOrcamento.getSelectedIndex()!= -1){
                switch(CampoQtdPessoasOrcamento.getSelectedIndex()){
                    case 0:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(false);
                        CampoQuadrado.setEnabled(false);
                    break;
                    case 1:
                        CampoRedondo.setEnabled(false);
                        CampoRetangulo.setEnabled(false);
                        CampoQuadrado.setEnabled(true);
                    break;
                    case 2:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(false);
                        CampoQuadrado.setEnabled(false);
                    break;
                    case 3:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(false);
                        CampoQuadrado.setEnabled(false);
                    break;
                    case 4:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(false);
                        CampoQuadrado.setEnabled(true);
                    break;
                    case 5:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(false);
                        CampoQuadrado.setEnabled(false);
                    break;
                    case 6:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(true);
                        CampoQuadrado.setEnabled(false);
                    break;
                    case 7:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(true);
                        CampoQuadrado.setEnabled(true);
                    break;
                    case 8:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(true);
                        CampoQuadrado.setEnabled(false);
                    break;
                    case 9:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(true);
                        CampoQuadrado.setEnabled(true);
                    break;
                    case 10:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(false);
                        CampoQuadrado.setEnabled(false);
                    break;
                    case 11:
                        CampoRedondo.setEnabled(false);
                        CampoRetangulo.setEnabled(false);
                        CampoQuadrado.setEnabled(true);
                    break;
                    case 12:
                        CampoRedondo.setEnabled(true);
                        CampoRetangulo.setEnabled(true);
                        CampoQuadrado.setEnabled(false);
                    break;
                    case 13:
                        CampoRedondo.setEnabled(false);
                        CampoRetangulo.setEnabled(true);
                        CampoQuadrado.setEnabled(true);
                    break;
                    case 14:
                        CampoRedondo.setEnabled(false);
                        CampoRetangulo.setEnabled(true);
                        CampoQuadrado.setEnabled(false);
                    break;
                    case 15:
                        CampoRedondo.setEnabled(false);
                        CampoRetangulo.setEnabled(true);
                        CampoQuadrado.setEnabled(true);
                    break;
                    case 16:
                        CampoRedondo.setEnabled(false);
                        CampoRetangulo.setEnabled(true);
                        CampoQuadrado.setEnabled(false);
                    break;
                }
                orc.setNumPessoas(CampoQtdPessoasOrcamento.getSelectedItem().toString());
                buttonGroup1.clearSelection();
            }
       
    }//GEN-LAST:event_CampoQtdPessoasOrcamentoItemStateChanged

    private void CampoRedondoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CampoRedondoItemStateChanged
         if (CampoRedondo.isSelected()){
            orc.setForma("redondo");
            calcularDimensaoOrcamento();
            orc.setDimensao(CampoDimensaoOrcamento.getText());
            }
    }//GEN-LAST:event_CampoRedondoItemStateChanged

    private void CampoQuadradoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CampoQuadradoItemStateChanged
       if(CampoQuadrado.isSelected()){
            orc.setForma("quadrado");
            calcularDimensaoOrcamento();
            orc.setDimensao(CampoDimensaoOrcamento.getText());
        }
    }//GEN-LAST:event_CampoQuadradoItemStateChanged

    private void CampoRetanguloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CampoRetanguloItemStateChanged
        if(CampoRetangulo.isSelected()){
            orc.setForma("retangulo"); 
            calcularDimensaoOrcamento();
            orc.setDimensao(CampoDimensaoOrcamento.getText());
        }
                
    }//GEN-LAST:event_CampoRetanguloItemStateChanged

    private void TabelaFinalizarPedidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabelaFinalizarPedidoKeyPressed

    }//GEN-LAST:event_TabelaFinalizarPedidoKeyPressed

    private void TabelaPedidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TabelaPedidosKeyPressed
//        selecionarIdPedido();
    }//GEN-LAST:event_TabelaPedidosKeyPressed

    private void TabelaPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaPedidosMouseClicked
                selecionarIdPedido();

    }//GEN-LAST:event_TabelaPedidosMouseClicked

    private void TabelaPedidosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaPedidosMousePressed
         selecionarIdPedido();
    }//GEN-LAST:event_TabelaPedidosMousePressed

    private void PedidoReceberSimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PedidoReceberSimMouseClicked
       if (PedidoReceberSim.isSelected()){
            if(CampoIdPedidoReceber.getText().equals("")){
                JOptionPane.showMessageDialog(null, "NÃ£o hÃ¡ nenhum pedido selecionado para receber. Por favor, selecione um.","AtenÃ§Ã£o",JOptionPane.INFORMATION_MESSAGE);
            }else{
                atualizarPedido();
                atualizarTabelaPedidos(pesquisarPedidos());
                calcularFinancas();
            } 
            CampoIdPedidoReceber.setText("");
            buttonGroup2.clearSelection();
        } 
        
    }//GEN-LAST:event_PedidoReceberSimMouseClicked

    private void CampoDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CampoDescontoKeyReleased

    }//GEN-LAST:event_CampoDescontoKeyReleased

    private void BotaoDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoDescontoActionPerformed
        if(validarDesconto()){
            float desconto = Float.parseFloat(CampoDesconto.getText().replace(",", "."));
            darDesconto(desconto);
        }
       
    }//GEN-LAST:event_BotaoDescontoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane AbaFuncao;
    private javax.swing.JButton BotaoAddProd;
    private javax.swing.JButton BotaoCadastrar;
    private javax.swing.JButton BotaoCancelarOrcamento;
    private javax.swing.JButton BotaoConfirmarOrcamento;
    private javax.swing.JButton BotaoDesconto;
    private javax.swing.JButton BotaoEditar;
    private javax.swing.JButton BotaoPedir;
    private javax.swing.JButton BotaoPesquisaPedidos;
    private javax.swing.JButton BotaoRemover;
    private javax.swing.JButton BotaoSalvarCliente;
    private javax.swing.JButton BotaoSalvarProd;
    private javax.swing.JTextField CampoBairroCliente;
    private javax.swing.JTextField CampoCidadeCliente;
    private javax.swing.JTextField CampoClienteOrcamento;
    private javax.swing.JFormattedTextField CampoDataFim;
    private javax.swing.JFormattedTextField CampoDataInicio;
    private javax.swing.JFormattedTextField CampoDataOrcamento;
    private javax.swing.JFormattedTextField CampoDesconto;
    private javax.swing.JFormattedTextField CampoDespesaPedidos;
    private javax.swing.JTextField CampoDimensaoOrcamento;
    private javax.swing.JTextField CampoIdCliente;
    private javax.swing.JFormattedTextField CampoIdClienteOrcamento;
    private javax.swing.JTextField CampoIdPedidoReceber;
    private javax.swing.JTextField CampoIdProd;
    private javax.swing.JFormattedTextField CampoIdProdOrcamento;
    private javax.swing.JComboBox<String> CampoMaoObraOrcamento;
    private javax.swing.JComboBox<String> CampoMedidaProd;
    private javax.swing.JTextField CampoNomeCliente;
    private javax.swing.JFormattedTextField CampoNumCliente;
    private javax.swing.JFormattedTextField CampoPrecoProd;
    private javax.swing.JFormattedTextField CampoPrecoProdOrcamento;
    private javax.swing.JTextField CampoProdOrcamento;
    private javax.swing.JTextField CampoProduto;
    private javax.swing.JComboBox<String> CampoQtdPessoasOrcamento;
    private javax.swing.JTextField CampoQtdProd;
    private javax.swing.JTextField CampoQtdProdOrcamento;
    private javax.swing.JRadioButton CampoQuadrado;
    private javax.swing.JFormattedTextField CampoReceberPedidos;
    private javax.swing.JFormattedTextField CampoReceitaPedidos;
    private javax.swing.JRadioButton CampoRedondo;
    private javax.swing.JRadioButton CampoRetangulo;
    private javax.swing.JTextField CampoRuaCliente;
    private javax.swing.JFormattedTextField CampoTelCliente;
    private javax.swing.JFormattedTextField CampoTotalOrcamento;
    private javax.swing.JFormattedTextField CampoTotalPedidos;
    private javax.swing.JRadioButton PedidoReceberSim;
    private javax.swing.JTable TabelaClientes;
    private javax.swing.JTable TabelaEstoque;
    private javax.swing.JTable TabelaFinalizarPedido;
    private javax.swing.JTable TabelaOrcamento;
    private javax.swing.JTable TabelaPedidos;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables

    private void habilitarProduto(boolean status) {
        CampoIdProd.setEnabled(status);
        CampoProduto.setEnabled(status);
        CampoProduto.setEditable(status);
        CampoQtdProd.setEnabled(status);
        CampoQtdProd.setEditable(status);
        CampoMedidaProd.setEnabled(status);
        CampoPrecoProd.setEnabled(status);
        CampoPrecoProd.setEditable(status);
        BotaoSalvarProd.setEnabled(status);
    }
    
    private void limparProduto() {
        CampoIdProd.setText("");
        CampoProduto.setText("");
        CampoQtdProd.setText("");
        CampoMedidaProd.setSelectedIndex(-1);
        CampoPrecoProd.setText("");
    }
     
    private void salvarProduto() {
        if(JOptionPane.showConfirmDialog(null, "Deseja salvar o registro?","Confirmar Cadastro!",JOptionPane.YES_NO_OPTION)== 0){
            Produto prod = new Produto();
            ProdutoDAO proddao = new ProdutoDAO();
            prod.setNome(CampoProduto.getText().toUpperCase());
            prod.setMedida(CampoMedidaProd.getSelectedItem().toString());
            prod.setPreco(Float.parseFloat(CampoPrecoProd.getText().replaceAll(",", ".")));
            prod.setQuantidade(Float.parseFloat(CampoQtdProd.getText().replaceAll(",", ".")),prod.getMedida());   

            
            try{
                proddao.adicionar(prod);
            }catch(Exception erro){
            JOptionPane.showMessageDialog(null, erro.getMessage(),"Erro ao Salvar",JOptionPane.ERROR_MESSAGE);
            }
            
        }
    }
    
    private void removerProduto(Long id) {
        ProdutoDAO proddao = new ProdutoDAO();
        if(JOptionPane.showConfirmDialog(null, "Ao excluir esse registro, ele serÃ¡ deletado permanentemente da base de dados. Deseja prosseguir?","Confirmar ExclusÃ£o!",JOptionPane.YES_NO_OPTION)== 0){
            proddao.excluir(id);
        }       
    }
    
    private void editarProduto() {
            Produto prod = new Produto();
            ProdutoDAO proddao = new ProdutoDAO();
            prod.setId(Long.parseLong(CampoIdProd.getText()));
            prod.setNome(CampoProduto.getText().toUpperCase());
            prod.setMedida(CampoMedidaProd.getSelectedItem().toString());
            prod.setPreco(Float.parseFloat(CampoPrecoProd.getText().replaceAll(",", ".")));
            prod.setQuantidade(Float.parseFloat(CampoQtdProd.getText().replaceAll(",", ".")),prod.getMedida());

            
                
            if(JOptionPane.showConfirmDialog(null, "Ao alterar esse registro, ele serÃ¡ modificado permanentemente da base de dados. Deseja prosseguir?","Confirmar AlteraÃ§Ã£o!",JOptionPane.YES_NO_OPTION)== 0){
                    proddao.alterar(prod);
                }
    }

    private void preencherProdutos() {
        DefaultTableModel modelo = (DefaultTableModel) TabelaEstoque.getModel();
        modelo.setNumRows(0);
        ProdutoDAO proddao = new ProdutoDAO();
        proddao.listar();
        try{
            for (Produto prod : proddao.listar()) {
                modelo.addRow(new Object[]{
                    prod.getId(),
                    prod.getNome(),
                    prod.getQuantidade(),
                    prod.getMedida()
                });
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, erro.getMessage(),"Erro ao gerar tabela",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void preencherProdutos(String nome) {
        DefaultTableModel modelo = (DefaultTableModel) TabelaEstoque.getModel();
        modelo.setNumRows(0);
        ProdutoDAO proddao = new ProdutoDAO();
        try{
            for (Produto prod : proddao.listar()) {
                if(prod.getNome().contains(nome.toUpperCase())){
                    modelo.addRow(new Object[]{
                        prod.getId(),
                        prod.getNome(),
                        prod.getQuantidade(),
                        prod.getMedida()
                    });
                }
                
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, erro.getMessage(),"Erro ao gerar tabela",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void selecionarProduto(Long id) {
            Produto prod = new Produto();
            ProdutoDAO proddao = new ProdutoDAO();
            prod = proddao.listarPorId(id);
            CampoIdProd.setText(prod.getId().toString());
            CampoProduto.setText(prod.getNome());
            CampoQtdProd.setText(String.valueOf(prod.getQuantidade()).replace(".", ","));
            CampoMedidaProd.setSelectedItem(prod.getMedida());
            CampoPrecoProd.setText(String.valueOf(prod.getPreco()).replace(".", ","));
    }

    private boolean validarProduto() {
        boolean retorno = false;
        if(validarNomeProd() && validarQtdProd() && validarMedidaProd() && validarPrecoProd() == true){
           retorno= true;
        }
       return retorno;
    }

    private boolean validarNomeProd() {
        boolean retorno = false;
        if(CampoProduto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo produto Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno;
    }

    private boolean validarQtdProd() {
        boolean retorno = false;
        if (CampoQtdProd.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo quantidade do produto Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            try{
              float qtd =  Float.parseFloat(CampoQtdProd.getText().replaceAll(",", "."));
              retorno=true;
            }catch(Exception erro){
                JOptionPane.showMessageDialog(null, "O campo quantidade do produto deve conter apenas nÃºmeros e uma vÃ­rgula","Erro de Caracteres InvÃ¡lidos",JOptionPane.ERROR_MESSAGE);
            }
        }
        return retorno;
    }

    private boolean validarPrecoProd() {
        boolean retorno = false;
        if (CampoPrecoProd.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo preco do produto Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            try{
              float preco =  Float.parseFloat(CampoQtdProd.getText().replaceAll(",", "."));
              retorno=true;
            }catch(Exception erro){
                JOptionPane.showMessageDialog(null, "O campo preco do produto deve conter apenas nÃºmeros e uma vÃ­rgula","Erro de Caracteres InvÃ¡lidos",JOptionPane.ERROR_MESSAGE);
            }
        }
        return retorno;
    }

    private boolean validarMedidaProd() {
        boolean retorno = false;
        if(CampoMedidaProd.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "O campo de medida do produto Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno;
    }

    private void habilitarCliente(boolean status) {
        CampoIdCliente.setEnabled(status);
        CampoNomeCliente.setEnabled(status);
        CampoNomeCliente.setEditable(status);
        CampoTelCliente.setEnabled(status);
        CampoTelCliente.setEditable(status);
        CampoRuaCliente.setEnabled(status);
        CampoRuaCliente.setEditable(status);
        CampoNumCliente.setEnabled(status);
        CampoNumCliente.setEditable(status);
        CampoBairroCliente.setEnabled(status);
        CampoBairroCliente.setEditable(status);
        CampoCidadeCliente.setEnabled(status);
        CampoCidadeCliente.setEditable(status);
        BotaoSalvarCliente.setEnabled(status);
    }
    
    private void selecionarCliente(Long id) {
        Cliente cliente = new Cliente();
        ClienteDAO clientedao = new ClienteDAO();
        cliente= clientedao.listarPorId(id);
        CampoIdCliente.setText(cliente.getId().toString());
        CampoNomeCliente.setText(cliente.getNome());
        CampoTelCliente.setText(cliente.getTelefone());
        CampoRuaCliente.setText(cliente.getRua());
        CampoNumCliente.setText(cliente.getNumero());
        CampoBairroCliente.setText(cliente.getBairro());
        CampoCidadeCliente.setText(cliente.getCidade());        
    }
    private void limparCliente() {
        CampoIdCliente.setText("");
        CampoNomeCliente.setText("");
        CampoTelCliente.setText("");
        CampoRuaCliente.setText("");
        CampoNumCliente.setText("");
        CampoBairroCliente.setText("");
        CampoCidadeCliente.setText("");
    }

    private void salvarCliente() {
        if(JOptionPane.showConfirmDialog(null, "Deseja salvar o registro?","Confirmar Cadastro!",JOptionPane.YES_NO_OPTION)== 0){
            Cliente cliente = new Cliente();
            ClienteDAO clientedao = new ClienteDAO();
            cliente.setNome(CampoNomeCliente.getText().toUpperCase());
            cliente.setTelefone(CampoTelCliente.getText());
            cliente.setRua(CampoRuaCliente.getText().toUpperCase());
            cliente.setNumero(CampoNumCliente.getText());
            cliente.setBairro(CampoBairroCliente.getText().toUpperCase());
            cliente.setCidade(CampoCidadeCliente.getText().toUpperCase());
            try{
                clientedao.adicionar(cliente);
            }catch(Exception erro){
            JOptionPane.showMessageDialog(null, erro.getMessage(),"Erro ao Adicionar",JOptionPane.ERROR_MESSAGE);
            }
            
        }
    }

    private void removerCliente(Long id) {
        ClienteDAO clientedao = new ClienteDAO();
        if(JOptionPane.showConfirmDialog(null, "Ao excluir esse registro, ele serÃ¡ deletado permanentemente da base de dados. Deseja prosseguir?","Confirmar ExclusÃ£o!",JOptionPane.YES_NO_OPTION)== 0){
            clientedao.excluir(id);
        }
    }

    private void editarCliente() {
        Cliente cliente = new Cliente();
        ClienteDAO clientedao = new ClienteDAO();
        cliente.setId(Long.parseLong(CampoIdCliente.getText()));
        cliente.setNome(CampoNomeCliente.getText().toUpperCase());
        cliente.setTelefone(CampoTelCliente.getText());
        cliente.setRua(CampoRuaCliente.getText().toUpperCase());
        cliente.setNumero(CampoNumCliente.getText());
        cliente.setBairro(CampoBairroCliente.getText().toUpperCase());
        cliente.setCidade(CampoCidadeCliente.getText().toUpperCase());
           
        if(JOptionPane.showConfirmDialog(null, "Ao alterar esse registro, ele serÃ¡ modificado permanentemente da base de dados. Deseja prosseguir?","Confirmar AlteraÃ§Ã£o!",JOptionPane.YES_NO_OPTION)== 0){
            clientedao.alterar(cliente);
        }
    }

    private void preencherClientes() {
        DefaultTableModel modelo01 = (DefaultTableModel) TabelaClientes.getModel();
        modelo01.setNumRows(0);
        ClienteDAO clientedao = new ClienteDAO();
        try{
            for (Cliente cliente : clientedao.listar()) {

                modelo01.addRow(new Object[]{
                    cliente.getId(),
                    cliente.getNome(),
                    cliente.getTelefone()
                });
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, erro.getMessage(),"Erro ao gerar tabela",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void preencherClientes(String nome){
        DefaultTableModel modelo01 = (DefaultTableModel) TabelaClientes.getModel();
        modelo01.setNumRows(0);
        ClienteDAO clientedao = new ClienteDAO();
        try{
            for (Cliente cliente : clientedao.listar()) {
                if(cliente.getNome().contains(nome.toUpperCase())){
                    modelo01.addRow(new Object[]{
                        cliente.getId(),
                        cliente.getNome(),
                        cliente.getTelefone()
                    });
                }
                
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, erro.getMessage(),"Erro ao gerar tabela",JOptionPane.ERROR_MESSAGE);
        }
    
    }
    
    private boolean validarCliente() {
        boolean retorno = false;
        if(validarNomeCliente() && validarTelCliente() && validarRuaCliente() && validarNumCliente() && validarBairroCliente() && validarCidadeCliente() == true){
           retorno= true;
        }
       return retorno;
    }

    private boolean validarNomeCliente() {
        boolean retorno = false;
        if(CampoNomeCliente.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo nome do cliente Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno;
    }

    private boolean validarTelCliente() {
        boolean retorno = false;
        if(CampoTelCliente.getText().equals("(  )     -    ")){
            JOptionPane.showMessageDialog(null, "O campo telefone do cliente Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno;
    }

    private boolean validarRuaCliente() {
        boolean retorno = false;
        if(CampoRuaCliente.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo rua do cliente Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno;
    }

    private boolean validarNumCliente() {
        boolean retorno = false;
        if(CampoNumCliente.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo nÃºmero do cliente Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno;
    }

    private boolean validarBairroCliente() {
        boolean retorno = false;
        if(CampoBairroCliente.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo bairro do cliente Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno;
    }

    private boolean validarCidadeCliente() {
        boolean retorno = false;
        if(CampoCidadeCliente.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo cidade do cliente Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno;
    }

    private void habilitarBotoesFuncao(boolean status) {
        BotaoCadastrar.setEnabled(status);
        BotaoRemover.setEnabled(status);
        BotaoEditar.setEnabled(status);
        
    }

    private void adicionarProdutoTabelaOrcamento(Produtos prods) {
        DefaultTableModel modelo02 = (DefaultTableModel) TabelaOrcamento.getModel();
        modelo02.addRow(new Object[]{
            prods.getNome(),
            prods.getQuantidade()
        });
    }
    
    private void removerprodutoTabelaOrcamento(int linha) {
        DefaultTableModel modelo02 = (DefaultTableModel) TabelaOrcamento.getModel();
        modelo02.removeRow(linha);
    }
    
    private void limpaTabelaOrcamento() {
        DefaultTableModel modelo02 = (DefaultTableModel) TabelaOrcamento.getModel();
        modelo02.setNumRows(0);
        
    }

    private void limparOrcamento() {
        CampoClienteOrcamento.setText("");
        CampoDataOrcamento.setText("");
        CampoQtdPessoasOrcamento.setSelectedIndex(-1);
        buttonGroup1.clearSelection();
        CampoDimensaoOrcamento.setText("");
        CampoPrecoProdOrcamento.setText("");
        CampoMaoObraOrcamento.setSelectedIndex(-1);
        CampoTotalOrcamento.setText("");
        CampoIdClienteOrcamento.setText("");
        CampoIdProdOrcamento.setText("");
        limpaTabelaOrcamento();
        limparVarOrcamento(orc);

    }

    private void preencherTabelaFinalizarPedido(Orcamento orc) {
    String hoje = DateTimeFormatter.ofPattern("dd-MM-yyyy").format(LocalDate.now());
        DefaultTableModel modelo03 = (DefaultTableModel) TabelaFinalizarPedido.getModel();
        modelo03.addRow(new Object[]{
            orc.getCliente().getNome(),
            orc.getForma(),
            orc.getDimensao(),
            hoje,
            DateTimeFormatter.ofPattern("dd-MM-yyyy").format(orc.getDataEntrega()),
            orc.getPrecoVenda(),
            false
        });
    }

    private void limparTabelaFinalizarPedido() {
        
        DefaultTableModel modelo03 = (DefaultTableModel) TabelaFinalizarPedido.getModel();
        TabelaFinalizarPedido.setRowSorter(new TableRowSorter(modelo03));
        modelo03.setNumRows(0); 
    }

    private void atualizarTabelaPedidos() {
        
        String pago = null;
        DefaultTableModel modelo04 = (DefaultTableModel) TabelaPedidos.getModel();
        modelo04.setNumRows(0);
        OrcamentoDAO orcdao = new OrcamentoDAO();
      
        try{
            for (Pedido pedido : orcdao.listar()) {
                if(pedido.isPago()){
                    pago ="sim";
                }else{
                    pago ="nÃ£o";
                }
                modelo04.addRow(new Object[]{
                    pedido.getId(),
                    pedido.getCliente(),
                    pedido.getForma(),
                    pedido.getDimensao(),
                    DateTimeFormatter.ofPattern("dd-MM-yyyy").format(pedido.getDataCompra()),
                    DateTimeFormatter.ofPattern("dd-MM-yyyy").format(pedido.getDataEntrega()),
                    pedido.getValor(),
                    pago
                });
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, erro.getMessage(),"Erro ao gerar tabela",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void atualizarTabelaPedidos(List<Pedido> pedidos) {
        String pago;
        DefaultTableModel modelo04 = (DefaultTableModel) TabelaPedidos.getModel();
        modelo04.setNumRows(0); 
        try{
            for (Pedido pedido : pedidos) {
                if(pedido.isPago()){
                    pago ="sim";
                }else{
                    pago ="nÃ£o";
                }
                modelo04.addRow(new Object[]{
                    pedido.getId(),
                    pedido.getCliente(),
                    pedido.getForma(),
                    pedido.getDimensao(),
                    DateTimeFormatter.ofPattern("dd-MM-yyyy").format(pedido.getDataCompra()),
                    DateTimeFormatter.ofPattern("dd-MM-yyyy").format(pedido.getDataEntrega()),
                    pedido.getValor(),
                    pago
                });
            }
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, erro.getMessage(),"Erro ao gerar tabela",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void calcularDimensaoOrcamento() {
        OrcamentoDAO orcdao = new OrcamentoDAO();
        int pessoas = Integer.parseInt(orc.getNumPessoas());
        CampoDimensaoOrcamento.setText(orcdao.buscarDimensao(pessoas,orc.getForma()));
    }



    private void calcularTotalOrcamento(float preco) {
        float porc;
        switch (CampoMaoObraOrcamento.getSelectedIndex()){
            case 0:
                porc = ((float) (0.1* preco));
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));              
            break;
            case 1:
                porc = ((float) (0.2* preco));
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));           
            break;
            case 2:
                porc = ((float) (0.3* preco));
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));             
            break;
            case 3:
                porc = ((float) (0.4* preco));
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));    
            break;
            case 4:
                porc = ((float) (0.5* preco));
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));    
            break;
             case 5:
                porc = ((float) (0.6* preco));
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));    
            break;
             case 6:
                porc = ((float) (0.7* preco));
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));    
            break;
             case 7:
                porc = ((float) (0.8* preco));
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));    
            break;
             case 8:
                porc = ((float) (0.9* preco));
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));    
            break;
             case 9:
                porc = 1 * preco;
                orc.setMaoObra(CampoMaoObraOrcamento.getSelectedItem().toString());
                orc.setPrecoVenda(preco + porc);
                CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));    
            break;
        }    
    }

    private List<Pedido> pesquisarPedidos() {
        OrcamentoDAO orcdao = new OrcamentoDAO();
        List<Pedido> pedidos = new ArrayList<>();
        pedidos = orcdao.listar();
        return pedidos;
        
    }
     private List<Pedido> pesquisarPedidos(LocalDate inicio, LocalDate fim) {
        OrcamentoDAO orcdao = new OrcamentoDAO();
        List<Pedido> pedidos = new ArrayList<>();
        pedidos = orcdao.buscarPorPeriodo(inicio, fim);
        return pedidos;
    }

    private void atualizarPedido() {
        Long id = Long.parseLong(CampoIdPedidoReceber.getText());
        OrcamentoDAO orcdao = new OrcamentoDAO();
        Pedido pedido = new Pedido();
        pedido = orcdao.listarPorId(id);
        pedido.setPago(true);
        orcdao.alterar(pedido);
       
    }


    private boolean verificarEstoque(float qtd, float qtdEstoque) {
        boolean retorno = false;
        if(qtdEstoque< qtd){
            JOptionPane.showMessageDialog(null, "VocÃª nÃ£o possui estoque o suficiente. FaÃ§a compras antes!","Estoque insuficiente",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno;
    }

    private boolean validarOrcamento() {
        boolean retorno = false;
        if(validarClienteOrc() && validarDataOrc() && validarNumPessoasOrc() && validarformaOrc() && validarListaProdutosOrc() && ValidarMaoObra()== true){
           retorno= true;
        }
       return retorno;
    }

    private boolean validarIdClienteOrc() {
        boolean retorno = false;
        try{
            int teste =  Integer.parseInt(CampoIdClienteOrcamento.getText());
            retorno=true;
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "O campo id do cliente deve conter apenas nÃºmeros","Erro de Caracteres InvÃ¡lidos",JOptionPane.ERROR_MESSAGE);
            CampoIdClienteOrcamento.setText("");
        }
        return retorno;
    }

    private boolean validarClienteOrc() {
        boolean retorno= false;
        if (CampoClienteOrcamento.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo cliente Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
              retorno=true;
            }
        return retorno;
    }

    private boolean validarDataOrc() {
        boolean retorno = false;
        if (CampoDataOrcamento.getText().equals("  /  /    ")){
            JOptionPane.showMessageDialog(null, "O campo data da entrega Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            retorno = true;
        }
        return retorno; 
    }

    private boolean validarNumPessoasOrc() {
        boolean retorno= false;
        if (CampoQtdPessoasOrcamento.getSelectedIndex()== -1){
            JOptionPane.showMessageDialog(null, "O campo nÃºmero de pessoas Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
              retorno=true;
            }
        return retorno;
    }

    private boolean validarformaOrc() {
        boolean retorno= false;
        if (CampoRedondo.isSelected()||CampoRetangulo.isSelected()||CampoQuadrado.isSelected()){
            retorno =true;
        }else{
             JOptionPane.showMessageDialog(null, "O campo forma do bolo Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE); 
            }
        return retorno;
    }

    private boolean validarListaProdutosOrc() {
         boolean retorno= false;
        if (orc.getListaProd().isEmpty()){
            JOptionPane.showMessageDialog(null, "Os produtos sÃ£o necessÃ¡rios e nÃ£o podem ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
              retorno=true;
            }
        return retorno;
    }

    private boolean ValidarMaoObra() {
         boolean retorno= false;
        if (CampoMaoObraOrcamento.getSelectedIndex()== -1){
            JOptionPane.showMessageDialog(null, "O campo mÃ£o de obra Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
              retorno=true;
            }
        return retorno;
    }

    private boolean validarIdProdOrc() {
        boolean retorno = false;
        try{
            int teste =  Integer.parseInt(CampoIdProdOrcamento.getText());
            retorno=true;
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "O campo id do produto deve conter apenas nÃºmeros","Erro de Caracteres InvÃ¡lidos",JOptionPane.ERROR_MESSAGE);
            CampoIdProdOrcamento.setText("");
        }
        return retorno;
    }

    private boolean validarQtdProdOrcamento() {
         boolean retorno = false;
        if (CampoQtdProdOrcamento.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo quantidade do produto Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            try{
              float qtd =  Float.parseFloat(CampoQtdProdOrcamento.getText().replaceAll(",", "."));
              retorno=true;
            }catch(Exception erro){
                JOptionPane.showMessageDialog(null, "O campo quantidade do produto deve conter apenas nÃºmeros e uma vÃ­rgula","Erro de Caracteres InvÃ¡lidos",JOptionPane.ERROR_MESSAGE);
            }
        }
        return retorno;
    }

    private void salvarPedido() {
        OrcamentoDAO orcdao = new OrcamentoDAO();
        Pedido pedido = new Pedido();
        pedido.setCliente(orc.getCliente().getNome());
        pedido.setForma(orc.getForma());
        pedido.setDimensao(orc.getDimensao());
        pedido.setDataCompra(LocalDate.now());
        pedido.setDataEntrega(orc.getDataEntrega());
        pedido.setValor(orc.getPrecoVenda());
        pedido.setCusto(Float.parseFloat(CampoPrecoProdOrcamento.getText()));
        pedido.setPago(false);
        orcdao.salvar(pedido);
        limparOrcamento();
    }

    private void selecionarIdPedido() {
        CampoIdPedidoReceber.setText(TabelaPedidos.getValueAt(TabelaPedidos.getSelectedRow(), 0).toString());
    }

    private void limparVarOrcamento(Orcamento orc) {
        orc.setCliente(new Cliente());
        orc.setDataEntrega(null);
        orc.setDimensao("");
        orc.setForma("");
        orc.setListaProd(new ArrayList());
        orc.setMaoObra("");
        orc.setNumPessoas("");
        orc.setPrecoProdutos(new ArrayList());
        orc.setPrecoVenda(0);
    }

    private void removerEstoque(Orcamento orc) {
        for (Produtos prods: orc.getListaProd()){
            float quantidade = prods.getEstoque()-prods.getQuantidade();
            prods.setQuantidade(quantidade);
            Produto prod = new Produto();
            ProdutoDAO proddao = new ProdutoDAO();
            prod = proddao.listarPorNome(prods.getNome());
            prod.setQuantidade(quantidade,prod.getMedida());
            proddao.alterar(prod);
        }
    }

    private void calcularFinancas() {
        Financas fin = new Financas();
        OrcamentoDAO orcdao = new OrcamentoDAO();
        fin.setReceita(orcdao.buscarReceita());
        fin.setDespesa(orcdao.buscarDespesa());
        fin.setReceber(orcdao.buscarPedidosReceber());
        fin.setSaldo(fin.getReceita()-fin.getDespesa());
        CampoReceitaPedidos.setText(String.valueOf(fin.getReceita()));
        CampoDespesaPedidos.setText(String.valueOf(fin.getDespesa()));
        CampoReceberPedidos.setText(String.valueOf(fin.getReceber()));
        CampoTotalPedidos.setText(String.valueOf(fin.getSaldo()));
        
    }
    
    private void calcularFinancas(LocalDate inicio, LocalDate fim) {
        Financas fin = new Financas();
        OrcamentoDAO orcdao = new OrcamentoDAO();
                
        fin.setReceita(orcdao.buscarReceita(inicio,fim));
        fin.setDespesa(orcdao.buscarDespesa(inicio,fim));
        fin.setReceber(orcdao.buscarPedidosReceber(inicio,fim));
        fin.setSaldo(fin.getReceita()-fin.getDespesa());
        CampoReceitaPedidos.setText(String.valueOf(fin.getReceita()));
        CampoDespesaPedidos.setText(String.valueOf(fin.getDespesa()));
        CampoReceberPedidos.setText(String.valueOf(fin.getReceber()));
        CampoTotalPedidos.setText(String.valueOf(fin.getSaldo()));
    }
    
    private boolean validarData(String data) {
        boolean retorno = false;
        try{
            String novaData = data.replace("/", "-");
            LocalDate data2 = LocalDate.parse(novaData, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
            retorno = true;
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "Verifique a data digitada, corrija os erros e tente novamente!", "Data Incorreta", JOptionPane.ERROR_MESSAGE);
        }
        return retorno; 
    }

    private boolean validarDataFutura(String data) {
        boolean retorno = false;
        try{
            String novaData = data.replace("/", "-");
            LocalDate data2 = LocalDate.parse(novaData, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
          if(data2.isBefore(LocalDate.now())){
             JOptionPane.showMessageDialog(null, "Verifique a data digitada, ela nÃ£o pode estar no passado!", "Data Passada", JOptionPane.ERROR_MESSAGE); 
          }else {
             retorno = true; 
          }
          
        }catch(Exception erro){
            JOptionPane.showMessageDialog(null, "Verifique a data digitada, corrija os erros e tente novamente!", "Data Incorreta", JOptionPane.ERROR_MESSAGE);
        }
        return retorno; 
    }

    private void darDesconto(float desconto) {
        float precoSemDesconto = orc.getPrecoVenda();
        orc.setPrecoVenda(precoSemDesconto - desconto);
        CampoTotalOrcamento.setText(String.valueOf(orc.getPrecoVenda()));         
    }

    private boolean validarDesconto() {
        boolean retorno = false;
        if (CampoDesconto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo desconto Ã© necessÃ¡rio e nÃ£o pode ficar em branco","Erro de Campo Vazio",JOptionPane.ERROR_MESSAGE);
        }else{
            try{
              float preco =  Float.parseFloat(CampoDesconto.getText().replaceAll(",", "."));
              retorno=true;
            }catch(Exception erro){
                JOptionPane.showMessageDialog(null, "O campo preco do produto deve conter apenas nÃºmeros e uma vÃ­rgula","Erro de Caracteres InvÃ¡lidos",JOptionPane.ERROR_MESSAGE);
            }
        }
        return retorno;
    }
}
